name: Build OpenWrt

on:
  # release:
  #   types: [published]
  push:
    #   branches:
    #     - master
    #   paths:
    #     - '.config'
    tags:
      # - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
      - '*'
  # schedule:
  #   - cron: 0 8 * * 5
  # watch:
  #   types: [started]

env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  CONFIG_FILE: .config
  DIY_SH: diy.sh
  FREE_UP_DISK: false
  SSH_ACTIONS: false
  TZ: Asia/Shanghai
  FILE_NAME: OpenWrt-K2P-firmware

jobs:
  build:
    runs-on: ubuntu-latest
    # if: github.event.repository.owner.id == github.event.sender.id

    steps:
      - name: Checkout
        uses: actions/checkout@master

      - name: Space cleanup
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q`
          sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d
          sudo -E apt-get update
          sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php*
          sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3.5 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler g++-multilib
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean

      - name: Clone source code # 克隆的源代码
        id: openwrt
        run: |
          git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt
          cd openwrt
          useVersionInfo=$(git show -s --date=short --format="Author:%an<br/>date:%cd<br/>commit:%s<br/>commit hash:%H")
          echo "::set-env name=useVersionInfo::$useVersionInfo"
          echo "::set-env name=DATE::$(date "+%Y-%m-%d %H:%M:%S")"

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASES_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ env.DATE }}
          body: |
            当前使用版本：
            ${{ env.useVersionInfo }}
          draft: false
          prerelease: false

      - name: Update feeds
        run: |
          cd openwrt
          sed -i 's/\#src-git helloworld/\src-git helloworld/g' ./feeds.conf.default
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: Load custom configuration # 加载自定义配置
        run: |
          [ -e files ] && mv files openwrt/files
          [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
          chmod +x $DIY_SH
          cd openwrt
          ../$DIY_SH

      - name: Generate configuration file
        run: |
          cd openwrt
          make defconfig

      - name: Make download
        run: |
          cd openwrt
          make download -j8
          find dl -size -1024c -exec rm -f {} \;

      - name: Compile firmware
        run: |
          cd openwrt
          make -j$(nproc) || make -j1 V=s
          echo "======================="
          echo "Space usage:"
          echo "======================="
          df -h
          echo "======================="
          du -h --max-depth=1 ./ --exclude=build_dir --exclude=bin
          du -h --max-depth=1 ./build_dir
          du -h --max-depth=1 ./bin

      - name: Prepare artifact
        id: organize
        run: |
          find openwrt/bin/targets/ -type d -name "packages" | xargs rm -rf {}
          mv openwrt/.config  openwrt/bin/targets/*/*
          cd openwrt/bin/targets/*/*
          echo "::set-env name=FIRMWARE::$(pwd)"

      - name: Upload artifact
        uses: actions/upload-artifact@master
        with:
          name: OpenWrt_firmware
          path: ${{ env.FIRMWARE }}

      - name: Upload Release Asset
        uses: svenstaro/upload-release-action@v1-release
        with:
          repo_token: ${{ secrets.RELEASES_TOKEN }}
          file: ${{ env.FIRMWARE }}/* # https://www.npmjs.com/package/glob
          # asset_name: ${{ env.FILE_NAME }}-${{ github.ref }}.zip
          tag: ${{ github.ref }}
          overwrite: true
          file_glob: true

      - name: WeChat notification
        run: curl https://sc.ftqq.com/${{ secrets.ServerChan }}.send?text=${{ env.FILE_NAME }}编译完成
